#
# Define basic display information
#
name     : Annotate Microbial Genome
subtitle : |
    Annotate bacterial or archeal genome using RASTtk.
tooltip  : |
    Annotate bacterial or archeal genome using RASTtk.

screenshots :
    []

#
# Define the set of other narrative methods that should be suggested to the user.
#
method-suggestions :
    related :
        []
    next :
        []


#
# Configure the display and description of the parameters
#
parameters :
    input_genome :
        ui-name : |
            Genome
        short-hint : |
            A genome (set of DNA contigs) including structural and functional annotations
        long-hint  : |
            A genome (set of DNA contigs) including structural and functional annotations


    call_features_rRNA_SEED :
        ui-name : |
            Call features rRNA SEED
        short-hint : |
            Analysis steps to include in annotation pipieline
        long-hint  : |
            Analysis steps to include in annotation pipieline
            
    call_features_tRNA_trnascan :
        ui-name : |
            Call features tRNA trnascan
        short-hint : |
            Analysis steps to include in annotation pipieline
        long-hint  : |
            Analysis steps to include in annotation pipieline
    
    call_selenoproteins :
        ui-name : |
            Call selenoproteins
        short-hint : |
            Analysis steps to include in annotation pipieline
        long-hint  : |
            Analysis steps to include in annotation pipieline
            
    call_pyrrolysoproteins :
        ui-name : |
            Call pyrrolysoproteins
        short-hint : |
            Analysis steps to include in annotation pipieline
        long-hint  : |
            Analysis steps to include in annotation pipieline
            
    call_features_repeat_region_SEED :
        ui-name : |
            Call features repeat region SEED
        short-hint : |
            Analysis steps to include in annotation pipieline
        long-hint  : |
            Analysis steps to include in annotation pipieline
            
    call_features_insertion_sequences :
        ui-name : |
            Call features insertion sequences
        short-hint : |
            Analysis steps to include in annotation pipieline
        long-hint  : |
            Analysis steps to include in annotation pipieline
            
    call_features_strep_suis_repeat :
        ui-name : |
            Call features strep suis repeat
        short-hint : |
            Analysis steps to include in annotation pipieline
        long-hint  : |
            Analysis steps to include in annotation pipieline
            
    call_features_strep_pneumo_repeat :
        ui-name : |
            Call features strep pneumo repeat
        short-hint : |
            Analysis steps to include in annotation pipieline
        long-hint  : |
            Analysis steps to include in annotation pipieline
            
    call_features_crispr :
        ui-name : |
            Call features crispr
        short-hint : |
            Analysis steps to include in annotation pipieline
        long-hint  : |
            Analysis steps to include in annotation pipieline
            
    call_features_CDS_glimmer3 :
        ui-name : |
            Call features CDS glimmer3
        short-hint : |
            Analysis steps to include in annotation pipieline
        long-hint  : |
            Analysis steps to include in annotation pipieline
            
    call_features_CDS_prodigal :
        ui-name : |
            Call features CDS prodigal
        short-hint : |
            Analysis steps to include in annotation pipieline
        long-hint  : |
            Analysis steps to include in annotation pipieline
            
    annotate_proteins_kmer_v2 :
        ui-name : |
            Annotate proteins kmer v2
        short-hint : |
            Analysis steps to include in annotation pipieline
        long-hint  : |
            Analysis steps to include in annotation pipieline
            
    kmer_v1_parameters :
        ui-name : |
            Kmer v1 parameters
        short-hint : |
            Analysis steps to include in annotation pipieline
        long-hint  : |
            Analysis steps to include in annotation pipieline
            
    annotate_proteins_similarity :
        ui-name : |
            Annotate proteins similarity
        short-hint : |
            Analysis steps to include in annotation pipieline
        long-hint  : |
            Analysis steps to include in annotation pipieline
    
    retain_old_anno_for_hypotheticals :
        ui-name : |
            Retain old annotations for hypotheticals
        short-hint : |
            When KBase annotates as hypothetical, keep existing annotation
        long-hint  : |
            When KBase annotates as hypothetical, keep existing annotation. This will make it more difficult to see which genes were annotated by KBase.
    
    resolve_overlapping_features :
        ui-name : |
            Resolve overlapping features
        short-hint : |
            Analysis steps to include in annotation pipieline
        long-hint  : |
            Analysis steps to include in annotation pipieline
            
    find_close_neighbors :
        ui-name : |
            Find close neighbors
        short-hint : |
            Analysis steps to include in annotation pipieline
        long-hint  : |
            Analysis steps to include in annotation pipieline
            
    call_features_prophage_phispy :
        ui-name : |
            Call features prophage phispy
        short-hint : |
            Analysis steps to include in annotation pipieline
        long-hint  : |
            Analysis steps to include in annotation pipieline

    output_genome :
        ui-name : |
            Output Genome Name
        short-hint : |
            name to assign the output genome; if left blank, a name will be generated for you
        long-hint  : |
            name to assign the output genome; if left blank, a name will be generated for you

description : |
    <p>This method uses components from RASTtk (Rapid Annotations using Subsystems Technology) to annotate a prokaryotic genome. In KBase, all Genome-typed objects include feature calls and annotation data.  This method allows users to re-annotate annotated genomes in order to make the annotations consistent with other KBase genomes and prepare the imported genome for further processing by KBase methods.</p>
    
    <p>A Genome-typed object can be generated by uploading a GenBank file, importing a GenBank file via ftp, retrieving a Genome-typed object from KBase or using the output of the Annotate Microbial Contig Set method. Unlike the Annotate Microbial Contig Set method, no metadata fields are required by this method, since it is assumed that they exist from GenBank file that was uploaded or original Genome-typed object.  The output of this method is a Genome-typed object with the new annotations.</p>

    <p>By default, this method assumes that you want to retain the gene calls from the original Genome-typed object and that you only wish to generate new annotations for the protein-encoding genes.  Therefore, the only scripts that run by default are the protein annotation scripts and the nearest neighbor computation.  However, the full annotation pipeline can be turned on using the advanced options.</p>

